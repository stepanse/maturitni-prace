- name: "[R5] Configuring a password on the bootloader"
  become: true
  ansible.builtin.lineinfile:
    path: /etc/update-extlinux.conf
    regexp: "^(password=)"
    line: 'password="$6$ZL32zaE7f9GonTlT$3MwnUsZqEQkrmJUbDJhKwNHxIkq2Fio9W3bemBLRg3ukZ46/j3WWhMbjh4KWVGYvSN0oI6iLP5XLquNhU4cbs0"'
  notify: Run update-extlinux

- name: "Modify kernel options - [R8, R11]"
  become: true
  ansible.builtin.lineinfile:
    path: /etc/update-extlinux.conf
    regexp: "^(default_kernel_opts=).*"
    line: 'default_kernel_opts="quiet rootfstype=ext4 page_poison=on pti=on slab_nomerge=yes slub_debug=FZP spec_store_bypass_disable=seccomp spectre_v2=on mce=0 page_alloc.shuffle=1 lsm=lockdown,landlock,yama"'
  notify:
    - Run update-extlinux
    - Reboot alert

- name: "[R9] Configuring the kernel options"
  become: true
  ansible.builtin.copy:
    content: |
      #
      # ANSSI BP-028-EN v2 RECOMMENDATION R9: CONFIGURING THE KERNEL OPTIONS
      #
      # Restrict access to the dmesg buffer (equivalent to
      # CONFIG_SECURITY_DMESG_RESTRICT=y)
      kernel.dmesg_restrict = 1
      # Hide kernel addresses in /proc and various other interfaces ,
      # including from privileged users
      kernel.kptr_restrict = 2
      # Explicitly specify the process id space supported by the kernel ,
      # 65536 being an example value
      kernel.pid_max = 65536
      # Restrict the use of the perf subsystem
      kernel.perf_cpu_time_max_percent = 1
      kernel.perf_event_max_sample_rate = 1
      # Prohibit unprivileged access to the perf_event_open () system call.
      # With a value greater than 2, we impose the possession of
      # CAP_SYS_ADMIN , in order to collect the perf events.
      kernel.perf_event_paranoid = 2
      # Activate ASLR
      kernel.randomize_va_space = 2
      # Disable Magic System Request Key combinations
      kernel.sysrq = 0
      # Restrict kernel BPF usage to privileged users
      kernel.unprivileged_bpf_disabled = 1
      # Completely shut down the system if the Linux kernel behaves
      # unexpectedly
      kernel.panic_on_oops = 1

    dest: /etc/sysctl.d/10_anssi-bp-028_r8.conf
    owner: root
    group: root
    mode: "0644"
  notify: Reload sysctl

- name: "[R11] Configuration option of the Yama LSM"
  become: true
  ansible.builtin.copy:
    content: kernel.yama.ptrace_scope = 1
    dest: /etc/sysctl.d/10_anssi-bp-028_r11.conf
    owner: root
    group: root
    mode: "0644"
  notify: Reload sysctl

- name: "[R12] IPv4 configuration options"
  become: true
  ansible.builtin.copy:
    content: |
      # Mitigation of the dispersion effect of the kernel JIT at the cost of a
      # compromise on the associated performance.
      net.core.bpf_jit_harden = 2
      # Consider as invalid the packets received from outside whose source
      # is the 127/8 network.
      net.ipv4.conf.all.accept_local = 0
      # Deny receipt of ICMP redirect packet. The suggested setting of this
      # option is to be strongly considered in the case of routers which must not
      # depend on an external element to determine the calculation of a route. Even
      # for non -router machines , this setting protects against
      # traffic diversions with ICMP redirect packets.
      net.ipv4.conf.all.accept_redirects = 0
      net.ipv4.conf.default.accept_redirects = 0
      net.ipv4.conf.all.secure_redirects = 0
      net.ipv4.conf.default.secure_redirects = 0
      net.ipv4.conf.all.shared_media = 0
      net.ipv4.conf.default.shared_media = 0
      # Deny the source routing header information supplied by the
      # packet to determine its route.
      net.ipv4.conf.all.accept_source_route = 0
      net.ipv4.conf.default.accept_source_route = 0
      # Prevent the Linux kernel from handling the ARP table globally. By default ,
      # it can respond to an ARP request from an X interface with information
      # from an interface Y. This behavior is problematic for routers and
      # equipment of a high availability system (VRRP , etc.).
      net.ipv4.conf.all.arp_filter = 1
      # Respond to ARP requests only if the source and destination addresses are on
      # the same network and come from the same interface on which the packet was received.
      # Note that the configuration of this option is to be studied according to the
      # use case.
      net.ipv4.conf.all.arp_ignore = 2
      # Refuse the routing of packets whose source or destination address is that
      # of the local loopback. This prohibits the transmission of packets with
      # source network 127/8.
      net.ipv4.conf.all.route_localnet = 0
      # Ignore gratuitous ARP requests. This configuration is
      # effective against ARP poisoning attacks but only applicable
      # in association with one or more controlled ARP proxies.
      # This option can be problematic on networks with devices
      # in a high availability setup (VRRP , etc.).
      net.ipv4.conf.all.drop_gratuitous_arp = 1
      # Check that the source address of packets received on a given interface
      # would have been contacted via this same interface. Otherwise , the packet
      # is ignored. Depending on usage , the value 1 can increase the verification to
      # all the interfaces , when the device is a router for which the calculation of
      # routes is dynamic. The interested reader is referred to RFC3704 for all
      # details for this feature.
      net.ipv4.conf.default.rp_filter = 1
      net.ipv4.conf.all.rp_filter = 1
      # This option should only be set to 1 in the case of a router because for such
      # equipment sending ICMP redirect is normal behaviour. A non -routing
      # equipment has no reason to receive a flow for which it is not the recipient
      # and therefore to send an ICMP redirect packet.
      net.ipv4.conf.default.send_redirects = 0
      net.ipv4.conf.all.send_redirects = 0
      # Ignore responses that do not comply with RFC 1122
      net.ipv4.icmp_ignore_bogus_error_responses = 1
      # Increase the range for ephemeral ports
      net.ipv4.ip_local_port_range = 32768 65535
      # RFC 1337
      net.ipv4.tcp_rfc1337 = 1
      # Use SYN cookies to prevent SYN flood type attacks.
      net.ipv4.tcp_syncookies = 1

    dest: /etc/sysctl.d/10_anssi-bp-028_r12.conf
    owner: root
    group: root
    mode: "0644"
  notify: Reload sysctl

- name: "[R13] Disabling IPv6"
  become: true
  ansible.builtin.copy:
    content: |
      net.ipv6.conf.default.disable_ipv6 =1
      net.ipv6.conf.all.disable_ipv6 =1

    dest: /etc/sysctl.d/10_anssi-bp-028_r13.conf
    owner: root
    group: root
    mode: "0644"
  notify: Reload sysctl

- name: "[R14] File system configuration options"
  become: true
  ansible.builtin.copy:
    content: |
      # Disable coredump creation for setuid executables
      # Note that it is possible to disable all coredumps with the
      # configuration CONFIG_COREDUMP=n
      fs.suid_dumpable = 0
      # Available from version 4.19 of the Linux kernel , allows to prohibit
      # opening FIFOs and "regular" files that are not owned by the user
      # in sticky folders for everyone to write.
      fs.protected_fifos = 2
      fs.protected_regular = 2
      # Restrict the creation of symbolic links to files that the user
      # owns. This option is part of the vulnerability prevention mechanisms
      # of the Time of Check - Time of Use (Time of Check -
      # Time of Use)
      fs.protected_symlinks = 1
      # Restrict the creation of hard links to files whose user is
      # owner. This sysctl is part of the prevention mechanisms against
      # Time of Check - Time of Use vulnerabilities , but also against the
      # possibility of retaining access to obsolete files
      fs.protected_hardlinks = 1
    owner: root
    group: root
    mode: "0644"
  notify: Reload sysctl

- name: "[R28] Typical partitioning - /opt"
  become: true
  ansible.posix.mount:
    path: /opt
    src: /opt
    opts: "bind,nosuid,nodev"
    state: present
    fstype: none
  notify: Remount opt

- name: "[R28] Typical partitioning - /tmp"
  become: true
  ansible.posix.mount:
    path: /tmp
    src: tmpfs
    opts: "nosuid,nodev,noexec"
    state: present
    fstype: tmpfs
  notify: Remount tmp

- name: "[R28] Typical partitioning - /srv"
  become: true
  ansible.posix.mount:
    path: /srv
    src: /srv
    opts: "bind,nosuid,nodev"
    state: present
    fstype: none
  notify: Remount srv

- name: "[R28] Typical partitioning - /home"
  become: true
  ansible.posix.mount:
    path: /home
    src: /home
    opts: "bind,nosuid,nodev"
    state: present
    fstype: none
  notify: Remount home

- name: "[R28] Typical partitioning - /proc"
  become: true
  ansible.posix.mount:
    path: /proc
    src: proc
    opts: "nodev,nosuid,noexec,hidepid=2"
    state: present
    fstype: proc

- name: "[R28] Typical partitioning - /usr"
  become: true
  ansible.posix.mount:
    path: /usr
    src: /usr
    opts: "bind,nodev"
    state: present
    fstype: none
  notify: Remount usr


- name: "[R28] Typical partitioning - /var" # also covers /var/log and /var/tmp because we just use bind mounts, not seperate partitions
  become: true
  ansible.posix.mount:
    path: /var
    src: /var
    opts: "bind,nosuid,nodev,noexec"
    state: present
    fstype: none
  notify: Remount var
